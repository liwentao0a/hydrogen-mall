<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration  scan="true">

    <!--引入配置-->
    <include resource="org/springframework/boot/logging/logback/base.xml" />
<!--    <include resource="org/springframework/boot/logging/logback/defaults.xml" />-->
<!--    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}"/>-->
<!--    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />-->
<!--    <include resource="org/springframework/boot/logging/logback/file-appender.xml" />-->

    <!--读取springboot配置文件值  scope="context"-->
    <springProperty name="SPRING_APPLICATION_NAME" source="spring.application.name" defaultValue="SPRING_APPLICATION_NAME"/>

    <!--设置上下文名称-->
<!--    <contextName>${SPRING_APPLICATION_NAME}</contextName>-->

    <!--输出到logstash-->
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <!--可以访问的logstash日志收集端口-->
        <destination>118.178.194.239:4560</destination>
        <!--日志文件输出格式-->
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <!--自定义参数-->
            <customFields>{"appname":"${SPRING_APPLICATION_NAME}"}</customFields>
        </encoder>
    </appender>

    <!--
        <logger>用来设置某一个包或者具体的某一个类的日志打印级别、
        以及指定<appender>。<logger>仅有一个name属性，
        一个可选的level和一个可选的addtivity属性。
        name:用来指定受此logger约束的某一个包或者具体的某一个类。
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
              还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。
              如果未设置此属性，那么当前logger将会继承上级的级别。
        addtivity:是否向上级logger传递打印信息。默认是true。
    -->
<!--    <logger name="com" level="TRACE" additivity="true">-->
<!--        <appender-ref ref="LOGSTASH"/>-->
<!--    </logger>-->

    <!--
        root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
        不能设置为INHERITED或者同义词NULL。默认是DEBUG
        可以包含零个或多个元素，标识这个appender将会添加到这个logger。
    -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
        <appender-ref ref="LOGSTASH" />
    </root>

</configuration>